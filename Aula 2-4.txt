Para fazer o botão, é bem simples. Criamos uma pasta com .js e .css, no qual o .js irá
exportar uma arrow function que retornará a propriedade do botão que queremos.
Por sorte, o html tem a tag button.

Escrevemos {props.texto} no botão porque quero retornar um botão que tenha texto.
Voltando ao index.js do Formulario, adicionaremos a tag Botao, que vai importar da
pasta Botao, e terá um texto="Criar Card", conforme o Figma.

As propriedades .css estão disponíveis no Figma. Algumas nós precisaremos colocar com
tentativa e erro.



------Avançado------
O que fizemos até agora funciona para o nosso botão simples. Mas e se a gente
tivesse que colocar uma imagem ou ícone que funcionasse como um botão? Seria
complicado fazer isso com o props.

O que a gente poderia fazer é ir no Formulario e alterar a tag para

<Botao>
    Criar Card
</Botao>

E no .js alteramos o props.texto para props.children

const Botao = (props) => {
    return (
        <button className="botao">
            {props.children}
        </button>
    )
}


Por que children?
Todo componente React tem os filhos, os *children*. Tudo o que for passado dentro de uma
tag react será passado pela propriedade children. Esse vai ser o comportamento que precisamos
adotar se quiséssemos um botão com ícone, imagem ou algo mais complicado.




Próxima aula: Iremos remover o comportamento padrão do botão do formulário, que é de recarregar a página.